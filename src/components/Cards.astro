---
const {
  text1_how_it_works,
  subtitle_how_it_works,
  text_how_it_works,
  title_card_1_how_it_works,
  paragraph_card_1_how_it_works,
   title_card_2_how_it_works,
  paragraph_card_2_how_it_works,
  title_card_3_how_it_works,
  paragraph_card_3_how_it_works
} = Astro.props;

const cardsContent = [
  {
    title: title_card_1_how_it_works,
    paragraph: paragraph_card_1_how_it_works,
  },
  {
    title: title_card_2_how_it_works,
    paragraph: paragraph_card_2_how_it_works,
  },
  {
    title: title_card_3_how_it_works,
    paragraph: paragraph_card_3_how_it_works,
  },
];
---

<!-- TEXTOS SUPERIORES -->
<section class="py-36 sm:py-36 bg-white text-center max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
  <p class="text-blue-600 text-sm font-semibold tracking-wide uppercase opacity-0 transition-opacity duration-1000 reveal">
    {text1_how_it_works}
  </p>
  <h2 class="mt-2 text-4xl sm:text-5xl font-extrabold tracking-tight text-gray-900 opacity-0 transition-opacity duration-1000 delay-200 reveal"
      style="font-family: 'Inter Tight', sans-serif;">
    {subtitle_how_it_works}
  </h2>
  <p class="mt-4 max-w-2xl mx-auto text-lg sm:text-xl text-gray-600 opacity-0 transition-opacity duration-1000 delay-500 reveal">
    {text_how_it_works}
  </p>
</section>

<!-- CARDS -->
<section class="relative py-16 sm:py-24" aria-labelledby="steps-heading">
  <!-- Fondo con imagen -->
  <div class="absolute inset-0 z-0">
    <img
      src="https://destinyonboard.com/wp-content/uploads/2025/05/2-1.png"
      alt="Fondo abstracto Destiny On Board"
      class="w-full h-full object-cover"
      loading="lazy"
    />
    <div class="absolute inset-0 backdrop-blur-xs bg-white/10"></div>
  </div>

  <!-- Contenido cards -->
 <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
  <div class="mt-16 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-10">
    {[
      {
        bg: 'bg-red-500',
        hoverBg: 'hover:bg-white',
        icon: 'text-red-600',
        textColor: 'text-black',
        cardTextColor: 'text-white',
        title: Astro.props.title_card_1_how_it_works,
        paragraph: Astro.props.paragraph_card_1_how_it_works
      },
      {
        bg: 'bg-blue-500',
        hoverBg: 'hover:bg-white',
        icon: 'text-blue-600',
        textColor: 'text-black',
        cardTextColor: 'text-white',
        title: Astro.props.title_card_2_how_it_works,
        paragraph: Astro.props.paragraph_card_2_how_it_works
      },
      {
        bg: 'bg-yellow-500',
        hoverBg: 'hover:bg-white',
        icon: 'text-yellow-600',
        textColor: 'text-black',
        cardTextColor: 'text-white',
        title: Astro.props.title_card_3_how_it_works,
        paragraph: Astro.props.paragraph_card_3_how_it_works
      },
    ].map((style, i) => (
      <div class={`relative group opacity-0 transform translate-y-8 transition-all duration-1000 delay-[${i * 300}ms] reveal`}>
        <div class="absolute -inset-0.5 rounded-xl blur opacity-25 group-hover:opacity-100 transition duration-500 group-hover:duration-300"></div>
        <div class={`relative ${style.bg} rounded-xl p-8 shadow-lg transition duration-300 ${style.hoverBg} group-hover:${style.textColor}`}>
          <div class={`flex flex-col items-center text-center transition-colors duration-300 group-hover:text-black ${style.cardTextColor}`}>
            <div class={`flex items-center justify-center h-16 w-16 rounded-full bg-gray-100 mb-6 ${style.icon} transition duration-300 group-hover:animate-bounce`}>
              <svg class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d={
                    i === 0
                      ? "M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                      : i === 1
                      ? "M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"
                      : "M13 10V3L4 14h7v7l9-11h-7z"
                  }
                />
              </svg>
            </div>
            <h3 class="text-xl font-semibold mb-4">{style.title}</h3>
            <p>{style.paragraph}</p>
          </div>
        </div>
      </div>
    ))}
  </div>
</div>

  
</section>

<style>
  @keyframes scroll {
    0% { transform: translateX(0%); }
    100% { transform: translateX(-50%); }
  }

  .animate-scroll {
    animation: scroll 20s linear infinite;
  }

  /* Pause on hover */
  .animate-scroll:hover {
    animation-play-state: paused;
  }
</style>

<!-- Intersection Observer script para animar solo una vez -->
<script is:inline>
  
  const observer = new IntersectionObserver(
    (entries, obs) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('opacity-100', 'translate-y-0');
          entry.target.classList.remove('opacity-0', 'translate-y-8');
          obs.unobserve(entry.target);
        }
      });
    },
    { threshold: 0.2 }
  );

  document.querySelectorAll('.reveal').forEach(el => observer.observe(el));
</script>
<script is:inline type="text/astro">
  const LogoItem = ({ src, alt }) => (
    <div class="rounded-xl border border-gray-200 p-4 min-w-[120px] h-[80px] flex items-center justify-center bg-white shadow-sm hover:shadow-md hover:scale-105 transition-all duration-300 ease-in-out hover:border-yellow-400 hover:bg-yellow-100 cursor-pointer group">
      <img src={src} alt={alt} class="h-full object-contain grayscale group-hover:grayscale-0 transition duration-300" />
    </div>
  );
</script>